---
- name: "Enable and start grafana service"
  service:
    name: "grafana-server"
    enabled: true
    state: started

- name: "Wait for Grafana endpoint"
  delegate_to: localhost
  run_once: true
  become: false
  uri:
    url: "{{ hs_grafana_url }}"
    ca_path: "{{ __hs_grafana_custom_ca_or_omit }}"
  register: _hs_grafana_ping
  until: _hs_grafana_ping.status == 200
  retries: 30
  delay: 10

- name: "Initial admin setup"
  include_tasks:
    file: "{{ role_path }}/tasks/__set_admin_pass.yml"
  when:
    - hs_grafana_password is not defined

- name: "[LOCAL] Grafana service configuration"
  delegate_to: localhost
  become: false
  block:
    - name: "Create service account"
      uri:
        method: POST
        url: "{{ hs_grafana_url }}/api/serviceaccounts"
        ca_path: "{{ __hs_grafana_custom_ca_or_omit }}"
        body_format: json
        body:
          name: "admin"
          role: "Admin"
          isDisabled: false
        headers:
          Content-Type: application/json
          Accept: application/json
        user: admin
        password: "{{ hs_grafana_password }}"
        force_basic_auth: true
        return_content: true
        status_code: 201
      register: result
      when:
        - hs_grafana_key is not defined

    - name: "Create service account token"
      uri:
        method: POST
        url: "{{ hs_grafana_url }}/api/serviceaccounts/{{ result.json.id }}/tokens"
        ca_path: "{{ __hs_grafana_custom_ca_or_omit }}"
        body_format: json
        body:
          name: "admin"
          role": "Admin"
        headers:
          Content-Type: application/json
          Accept: application/json
        user: admin
        password: "{{ hs_grafana_password }}"
        force_basic_auth: true
        return_content: true
        status_code: 200
      register: result
      when:
        - hs_grafana_key is not defined

    - name: "Variable cooking"
      set_fact:
        hs_grafana_key: "{{ result.json.key | trim() }}"
      when:
        - hs_grafana_key is not defined

    - name: "Persist secrets"
      include_tasks:
        file: "{{ role_path }}/tasks/__persist_secrets.yml"

    - name: "Copy TF blueprints"    # noqa risky-file-permissions
      copy:
        src: "{{ __hs_grafana_tf_blueprint_dir_setup }}/"
        dest: "{{ __hs_grafana_tf_work_dir_setup }}"
      when: tf_action == 'apply'

    - name: "Do Terraform"
      cloud.terraform.terraform:
        project_path: "{{ __hs_grafana_tf_work_dir_setup }}"
        state: "{{ (tf_action == 'destroy') | ternary('absent', 'present') }}"
        force_init: true
        workspace: "{{ hs_workspace }}"
        provider_upgrade: "{{ hs_tf_provider_upgrade | default(true) }}"
        variables:
          grafana_url: "{{ hs_grafana_url }}"
          grafana_auth: "{{ hs_grafana_key }}"
          grafana_ca_cert_file: "{{ __hs_grafana_custom_ca_or_omit }}"
      environment:
        TF_CLI_ARGS: ""
        TF_CLI_ARGS_init: ""
        TF_CLI_ARGS_plan: ""
        TF_CLI_ARGS_apply: ""
        TF_CLI_ARGS_destroy: ""
      register: tf_result
      tags: tf

