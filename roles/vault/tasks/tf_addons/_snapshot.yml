---
- name: "Create vault-snapshot system user"
  user:
    name: vault-snapshot
    system: true
    shell: "/usr/bin/bash"
    group: vault
    createhome: false
    home: "{{ __hs_vault_snapshot_home_dir }}"
    password: >-
      {{ lookup('community.general.random_string', length=32, special=false) }}


- name: "Create vault snapshot user home directory"
  file:
    path: "{{ __hs_vault_snapshot_home_dir }}"
    state: directory
    owner: vault-snapshot
    group: vault
    mode: 0700

- name: "Create vault snapshot directory"
  file:
    path: "{{ __hs_vault_snapshot_home_dir }}/snapshots"
    state: directory
    owner: vault-snapshot
    group: vault
    mode: 0700

- name: "Authorize snapshot user keys"
  ansible.posix.authorized_key:
    user: vault-snapshot
    key: "{{ _current_public_key }}"
    exclusive: false
    manage_dir: true
  loop: "{{ hs_vault_addon_snapshot_authorized_keys }}"
  loop_control:
    loop_var: _current_public_key

- name: "[LOCAL] Render {{ _current_conf_addon }} addon"    # noqa risky-file-permissions name[template]
  copy:
    src: "{{ role_path }}/files/{{ _current_conf_addon }}/"
    dest: "{{ hs_vault_terraform_work_dir }}/vault_addon_{{ _current_conf_addon }}/"
  delegate_to: localhost
  become: false
  when:
    - __hs_vault_is_first_master

- name: "[LOCAL] Render backend tf file"
  template:
    src: "tf_backend_{{ hs_vault_terraform_backend_type }}.tf.j2"
    dest: "{{ hs_vault_terraform_work_dir }}/vault_addon_{{ _current_conf_addon }}/backend.tf"
    mode: 0644
  delegate_to: localhost
  become: false
  when:
    - __hs_vault_is_first_master
    - hs_vault_terraform_backend_type is defined
    - (hs_vault_terraform_backend_type | length) > 0
    - hs_vault_terraform_backend_type in ['s3']

- name: "[LOCAL] Apply {{ _current_conf_addon }} addon"  # noqa name[template]
  cloud.terraform.terraform:
    project_path: "{{ hs_vault_terraform_work_dir }}/vault_addon_{{ _current_conf_addon }}"
    state: "present"    # noqa args
    force_init: true
    backend_config: "{{ hs_vault_terraform_backend_config }}"
    init_reconfigure: true
    provider_upgrade: "{{ hs_tf_provider_upgrade | default(true) }}"
    workspace: "{{ hs_vault_cluster_name }}"
  environment:
    VAULT_ADDR: "{{ hs_vault_external_url }}"
    VAULT_TOKEN: "{{ vault_init_content.root_token }}"
    VAULT_CACERT: "{{ hs_vault_use_custom_ca | ternary(hs_vault_local_ca_cert, '') }}"
    TF_CLI_ARGS: ""
    TF_CLI_ARGS_init: ""
    TF_CLI_ARGS_plan: ""
    TF_CLI_ARGS_apply: ""
    TF_CLI_ARGS_destroy: ""
  register: tf_result
  throttle: 1
  delegate_to: localhost
  become: false
  when:
    - __hs_vault_is_first_master

- name: "[LOCAL] Render {{ _current_conf_addon }} addon outputs"  # noqa name[template]
  copy:
    dest: "{{ hs_vault_local_secret_dir }}/vault_addon_{{ _current_conf_addon }}.yml"
    content: |-
      ---
      {{
        {
          'hs_vault_snapshot_token': tf_result.outputs.snapshot_token.value,
          'hs_vault_snapshot_passphrase': (
            hs_vault_snapshot_passphrase
            | default(lookup('password', '/dev/null length=64 chars=ascii_letters,digits'))
          )
        } | to_nice_yaml(indent=2)
      }}
    mode: 0600
  delegate_to: localhost
  become: false
  when:
    - __hs_vault_is_first_master

- name: "Load secret dir"
  include_vars:
    dir: "{{ hs_vault_local_secret_dir }}"
    ignore_unknown_extensions: true
  no_log: true

- name: "Render snapshot user bash profile"
  copy:
    dest: "{{ __hs_vault_snapshot_home_dir }}/.bash_profile"
    content: |-
      export PATH="/usr/bin/vault:${PATH}"
      export VAULT_ADDR="https://{{ hs_vault_api_address }}:{{ hs_vault_api_port }}"
      export VAULT_TOKEN="{{ hs_vault_snapshot_token }}"
    mode: 0600
    owner: vault-snapshot
    group: vault
